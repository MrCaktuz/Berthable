version: '24.0'

services:
  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www/html:delegated
    depends_on:
      - php
      - mysql
    networks:
      - internal

  mysql:
    image: mysql:latest
    restart: unless-stopped
    env_file: .env
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - "dbdata:/var/lib/mysql"
    ports:
      - "3306:3306"
    networks:
      - internal

  php: 
    build:
      context: .
      dockerfile: php.dockerfile
    restart: unless-stopped
    volumes:
      - .:/var/www/html:delegated
    depends_on:
      - mysql
    networks:
      - internal

  wp:
    build:
      context: .
      dockerfile: php.dockerfile
    volumes:
      - .:/var/www/html:delegated
    entrypoint: ["wp", "--allow-root"]
    networks:
      - internal

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    env_file: .env
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "8081:80"
    networks:
      - internal

volumes:
  dbdata:

networks:
  internal:
    driver: bridge