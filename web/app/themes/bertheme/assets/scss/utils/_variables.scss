@use 'SASS:map';

// === Globals ===
$ratios: (
  '0': 0,
  '05': 0.25,
  '1': 0.5,
  '2': 1,
  '3': 1.5,
  '4': 2,
  '5': 2.5,
  '6': 3,
  '7': 3.5,
  '8': 4,
  '9': 4.5,
  '10': 5,
);
$breakpoints: (
  'xs': 0px,
  'sm': 576px,
  'md': 768px,
  'lg': 992px,
  'xl': 1200px,
  'xxl': 1400px,
);
$icons: (
  'author',
  'checked',
  'close',
  'lessPortion',
  'menu',
  'morePortion',
  'moveDown',
  'moveUp',
  'search',
  'timer',
  'trash',
  'unchecked',
  'vege'
);

// === Colors ===
$colors: (
  'white': #ffffff,
  // Greys
  'lightest-30': rgba(#f0f0f0, 0.3),
  'lightest-50': rgba(#f0f0f0, 0.5),
  'lightest-80': rgba(#f0f0f0, 0.8),
  'lightest': #f0f0f0,
  'lighter': #bfbfbf,
  'darker': #313131,
  'darkest': #212121,
  // Colors
  'secondary': #70bea8,
  'primary': #ffd166,
  // Utils
  'error': #b32d2e,
);

// === Spacers ===
$spacer-base: 1.6rem;
$spacers: ();
@each $key, $ratio in $ratios {
  $spacers: map.merge(
    $spacers,
    (
      $key: $spacer-base * $ratio,
    )
  );
}

// --- Font families ===
$font-families: (
  'text': 'Quicksand, serif',
  'title': "'Indie Flower', serif",
  'brand': 'Megrim, serif',
);

// --- Font sizes ===
$base-font-size: 1.6rem;
$font-sizes: ();
@each $key, $ratio in $ratios {
  @if $key == '0' {
    $font-sizes: map.merge(
      $font-sizes,
      (
        $key: 1.2rem,
      )
    );
  } @else if $key == '1' {
    $font-sizes: map.merge(
      $font-sizes,
      (
        $key: 1.4rem,
      )
    );
  } @else {
    $font-sizes: map.merge(
      $font-sizes,
      (
        $key: $base-font-size * $ratio,
      )
    );
  }
}

// --- Font weights ===
$font-weights: (
  '1': 100,
  '2': 200,
  '3': 300,
  '4': 400,
  '5': 500,
  '6': 600,
  '7': 700,
  '8': 800,
);

// === Shadows ===
$shadow-size: 1rem;
$shadow-position: 0 0.5rem;
$shadows: (
  'transparent': $shadow-position $shadow-size transparent,
  'filters': inset $shadow-position $shadow-size var(--bt-c-darkest),
  'link': '0 0 0 0.1rem var(--bt-c-lightest), 0 0 0 0rem var(--bt-c-secondary)',
  'link-hover':
    '0 0 0 0.4rem var(--bt-c-lightest), 0 0 0 0.5rem var(--bt-c-secondary)',
);
@each $name, $value in $colors {
  $shadows: map.merge(
    $shadows,
    (
      $name: $shadow-position $shadow-size rgba($value, 0.2),
    )
  );
}

// === Radius ===
$base-radius: 1.6rem;
$radius: ();
@each $key, $ratio in $ratios {
  $radius: map.merge(
    $radius,
    (
      $key: $base-radius * $ratio,
    )
  );
}

// === Transitions ===
$transitions: (
  'default': all 300ms ease-in-out,
  'filters': all 1s ease-in-out,
);

// === Borders ===
$border-style: solid;
$border-width: 0.1rem;
$borders: (
  'default': $border-style $border-width transparent,
);
@each $name, $value in $colors {
  $borders: map.merge(
    $borders,
    (
      $name: $border-style $border-width var(--bt-c-#{$name}),
    )
  );
}

$titles: (
  'h1': (
    'max': var(--bt-fs-6),
    'min': var(--bt-fs-5),
    'weight': var(--bt-fw-1),
  ),
  'h2': (
    'max': var(--bt-fs-5),
    'min': var(--bt-fs-4),
    'weight': var(--bt-fw-1),
  ),
  'h3': (
    'max': var(--bt-fs-4),
    'min': var(--bt-fs-3),
    'weight': var(--bt-fw-1),
  ),
  'h4': (
    'max': var(--bt-fs-2),
    'min': var(--bt-fs-2),
    'weight': var(--bt-fw-1),
  ),
  'h5': (
    'max': var(--bt-fs-2),
    'min': var(--bt-fs-2),
    'weight': var(--bt-fw-1),
  ),
  'h6': (
    'max': var(--bt-fs-2),
    'min': var(--bt-fs-2),
    'weight': var(--bt-fw-1),
  ),
);
