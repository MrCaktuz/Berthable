@use 'SASS:map';

// === Globals ===
$ratios: (
  '0': 0,
  '05': 0.25,
  '1': 0.5,
  '2': 1,
  '3': 1.5,
  '4': 2,
  '5': 2.5,
  '6': 3,
  '7': 3.5,
  '8': 4,
  '9': 4.5,
  '10': 5,
);
$breakpoints: (
  'xs': 0px,
  'sm': 576px,
  'md': 768px,
  'lg': 992px,
  'xl': 1200px,
  'xxl': 1400px,
);
$icons: ('close', 'delete', 'filters', 'menu', 'search', 'timer');

// === Colors ===
$colors: (
  // Greys
  'lightest': #f0f0f0,
  'lighter': #bfbfbf,
  'darker': #313131,
  'darkest': #212121,
  // Colors
  'secondary': #70bea8,
  'primary': #ffd166,
  'accent': #a0c4ff,
  // Utils
  'error': #b32d2e
);

// === Spacers ===
$spacer-base: 1.6rem;
$spacers: ();
@each $key, $ratio in $ratios {
  $spacers: map.merge(
    $spacers,
    (
      $key: $spacer-base * $ratio,
    )
  );
}

// --- Font families ===
$font-families: (
  'text': "'Lato', serif",
  'title': "'Playfair', serif",
);

// --- Font sizes ===
$base-font-size: 1.6rem;
$font-sizes: ();
@each $key, $ratio in $ratios {
  $font-sizes: map.merge(
    $font-sizes,
    (
      $key: $base-font-size * $ratio,
    )
  );
}

$font-sizes: map.merge(
  $font-sizes,
  (
    0: 1.2rem,
  )
);
$font-sizes: map.merge(
  $font-sizes,
  (
    1: 1.4rem,
  )
);

// --- Font weights ===
$font-weights: (
  'light': 300,
  'normal': 400,
  'bold': 700,
);

// === Shadows ===
$shadow-size: 1rem;
$shadow-position: 0 0.5rem;
$shadows: (
  'transparent': $shadow-position $shadow-size transparent,
  'filters': inset $shadow-position $shadow-size var(--bt-c-darkest),
);
@each $name, $value in $colors {
  $shadows: map.merge(
    $shadows,
    (
      $name: $shadow-position $shadow-size rgba($value, 0.2),
    )
  );
}

// === Radius ===
$base-radius: 1.6rem;
$radius: ();
@each $key, $ratio in $ratios {
  $radius: map.merge(
    $radius,
    (
      $key: $base-radius * $ratio,
    )
  );
}

// === Transitions ===
$transitions: (
  'default': all 300ms ease-in-out,
  'filters': all 1s ease-in-out,
);

// === Borders ===
$border-style: solid;
$border-width: 0.1rem;
$borders: (
  'default': $border-style $border-width transparent,
);
@each $name, $value in $colors {
  $borders: map.merge(
    $borders,
    (
      $name: $border-style $border-width var(--bt-c-#{$name}),
    )
  );
}
